geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.5,color="pink") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "black", fill = "white") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.5,fill="pink") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "black", fill = "white") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.8,fill="pink") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "black", fill = "white") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.8,fill="blue") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "black", fill = "white") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.5,fill="blue") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "black", fill = "white") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.4,fill="blue") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "black", fill = "white") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.4,fill="pink") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "black", fill = "white") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.5,fill="pink") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "black", fill = "white") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.8,fill="pink") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "black", fill = "white") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.8,fill="pink") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "black", fill = "black") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.8,fill="pink") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "white", fill = "black") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.8,fill="pink") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "red", fill = "black") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.8,fill="pink") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "black", fill = "gray") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.8,fill="pink") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "black", fill = "white") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.8,fill="pink") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2.5,colour = "black", fill = "white") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`),alpha=.8,fill="pink") +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populations ,scales="free",nrow=1) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=observed_data,aes(x=date,y=popsize),shape=21,size=2,colour = "black", fill = "white") +
labs(x="sample index (30 mins)",y="intensity")+
ggsave(paste0(direc2save,"FIGS/",prename_figures,"NASAL_",todaystr,"_0.png"),width = 6, height = 4)
# Setup
rm(list=ls())
library(rstan)
library(zoo)
library(Rcpp)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
source("/Users/burcu/Dropbox/UZH_PROJECTS/col_res/code/STAN/prepare_data_NASAL_89.R")
source("/Users/burcu/Dropbox/UZH_PROJECTS/col_res/code/STAN/setup_NASAL.R")
library(xtable)
options(xtable.floating = FALSE)
options(xtable.timestamp = "")
prename_projections = "NASAL_predictions_";
prename_figures     = "NASAL_figures_";
prename_parameters  = "NASAL_parameters_";
direc2save          = "/Users/burcu/Dropbox/UZH_PROJECTS/col_res/code/STAN/OUT/"
todaystr            = format(Sys.Date(), "%d%m%Y");
samplesAdd   = 10;
data_list = list(
IC_C = 1e-6,
IC_A = 1e-6,
IC_S = 1e-9,
dum  = 0,
D    = numSamples,
k_SA = SA_data,
k_CP = CP_data,
p_mu_c      = c(0,1),
p_alpha_cc  = c(0,10),
p_thr_SC    = c(0,1e-3),
p_gamma_c   = c(0,1),
p_tau_c     = c(0,1e4),
p_K_c       = c(0,1),
p_rho_c     = c(0,1),
t0    =0,
t_data=0,
S     =numSamples+samplesAdd,
E     =samplesAdd,
ts    =1:(numSamples),
ts_pred=1:(numSamples+samplesAdd)
)
load("/Users/burcu/Dropbox/UZH_PROJECTS/col_res/code/STAN/OUT/RDATA/T_model_NASAL_89.RData")
save(T_model, file =paste0(direc2save,"RDATA/T_model_NASAL_89.RData"))
parameterSummary = summary(T_model, c("mu_c","alpha_cc","thr_SC","gamma_c","tau_c","K_c","rho_c"), probs = c(0.025, 0.25, 0.50, 0.75, 0.975))
write.table(parameterSummary$summary, file = paste0(direc2save,"CSVS/",prename_parameters,"NASAL_",todaystr,"_89.csv"))
xtable(parameterSummary$summary)
load("/Users/burcu/Dropbox/dummy/T_model_CANTON_AI_rend_0.RData")
View(T_model)
# Setup
rm(list=ls())
load("/Users/burcu/Dropbox/dummy/T_model_CANTON_AI_rend_0.RData")
parameterSummary = summary(T_model, c("pi","R0","tau","gamma_s","gamma_H","gamma_ICU","eps_H","eps_H2ICU","eps_x_ICU","r_d_s","r_lock","phi"), probs = c(0.025, 0.25, 0.50, 0.75, 0.975))
parameterSummary$summary
summary(T_model,c("p_relax"))
summary(T_model,c("trelax"))
summary(T_model,c("t_relax"))
summary(T_model,c("r_lock"))
rstan:::rstudio_stanc("~/Dropbox/dummy/model_CANTONS.stan")
library(foreign)
library(ggplot2)
library(gridExtra)
setwd("C:/Users/HPinc/OneDrive/Documents/#ETH/Block_Bacteriology/QFA2wip/")
devtools::load_all()
theme_set(theme_bw())
# Change working directory
setwd("C:/Users/HPinc/OneDrive/Documents/#ETH/Block_Bacteriology/QFA_89_2/Output_Data")
libr = "../../Files_for_course/LibraryDescription_89_7x12.txt"
# Setup
rm(list=ls())
library(rstan)
library(zoo)
library(Rcpp)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
source("/Users/burcu/Dropbox/UZH_PROJECTS/col_res/code/STAN/prepare_data_NASAL_89.R")
source("/Users/burcu/Dropbox/UZH_PROJECTS/col_res/code/STAN/setup_NASAL.R")
# Setup
rm(list=ls())
library(rstan)
library(zoo)
library(Rcpp)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
source("/Users/burcu/Dropbox/UZH_PROJECTS/nasalmicrobiota/code/STAN/prepare_data_NASAL_89.R")
source("/Users/burcu/Dropbox/UZH_PROJECTS/nasalmicrobiota/code/STAN/setup_NASAL.R")
rstan:::rstudio_stanc("~/Dropbox/covid-modeling-stan/BT/models/model_TR.stan")
rstan:::rstudio_stanc("~/Dropbox/covid-modeling-stan/BT/models/model_TR.stan")
rstan:::rstudio_stanc("~/Dropbox/covid-modeling-stan/BT/models/model_TR.stan")
# Setup
rm(list=ls())
args <- commandArgs(TRUE)
print(args)
r_c_in = 100
m_relax_in = 0
print(c(r_c_in,m_relax_in))
# Setup
rm(list=ls())
args <- commandArgs(TRUE)
print(args)
r_c_in = 100
m_relax_in = 0
print(c(r_c_in,m_relax_in))
library(rstan)
library(zoo)
library(Rcpp)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
source("/Users/burcu/dropbox/covid-modeling-stan/BT/prepare_data_TR_LOCAL.R")
source("/Users/burcu/dropbox/covid-modeling-stan/BT/setup.R")
View(cases_data_all)
# Setup
rm(list=ls())
args <- commandArgs(TRUE)
print(args)
r_c_in = 100
m_relax_in = 0
print(c(r_c_in,m_relax_in))
library(rstan)
library(zoo)
library(Rcpp)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
source("/Users/burcu/dropbox/covid-modeling-stan/BT/prepare_data_TR_LOCAL.R")
View(cases_data_all)
source("/Users/burcu/dropbox/covid-modeling-stan/BT/setup.R")
# no issue with CH in terms of NA values, but might need to use na.locf at one point for other cantons
cases_data  = cases_data_all;
deaths_data = deaths_data_all;
icu_data    = icu_data_all;
pop_size    = popsize_data_all;
daily_cases_data = append(diff(as.numeric(unlist(cases_data)),lag=1),as.numeric(cases_data[1,1]),after=0);
daily_deaths_data= append(diff(as.numeric(unlist(deaths_data)),lag=1),as.numeric(deaths_data[1,1]),after=0);
icu_data         = as.numeric(unlist(icu_data));
daily_cases_data = append(daily_cases_data,0,after=0);
daily_deaths_data= append(daily_deaths_data,0,after=0);
icu_data         = append(icu_data,0,after=0);
allDates_agg     = append(allDates,data_start,after=0);
agg_data         = tibble(allDates_agg,daily_cases_data,daily_deaths_data,icu_data);
observed_data    = c(daily_cases_data,icu_data,daily_deaths_data);
observed_dates   = c(allDates_agg,allDates_agg,allDates_agg);
days2add     = 8*7;
date_simul   = date_end + days2add;
data_list = list(
pop_t=pop_size,
tswitch_1=as.numeric(date_control_1-date_data+1),
tswitch_2=as.numeric(date_control_2-date_data+1),
trelax=as.numeric(date_relax-date_data+1),
r_end=1,
m_relax=m_relax_in/100,
gamma_c=1/14,
D=as.numeric(date_end-date_data+1),
k_daily_cases  = daily_cases_data,
k_icu          = icu_data,
k_daily_deaths = daily_deaths_data,
p_pi        = c(1,999),
p_R0        = c(2,3),
p_tau       = c(1/3,1/2),
p_gamma_s   = c(1/3,1/2),
p_gamma_H   = c(1/16,1/6),
p_gamma_ICU = c(1/8,1/3),
p_eps_H     = c(0.01,0.15),
p_eps_H2ICU = c(0.30,0.80),
p_eps_x_ICU = c(0.30,0.80),
p_r_d_s     = c(0.05,0.35),
p_r_d_c     = c(0.00,0.15),
p_r_lock_1  = c(1,1),
p_r_lock_2  = c(1,1),
p_phi       = 1/100,
t0=0,
t_data=1,
S=as.numeric(date_simul-date_data+1),
E=days2add,
ts=1:as.numeric(date_end-date_data+1),
ts_pred=1:as.numeric(date_simul-date_data+1),
r_c=r_c_in
)
# m_relax_in=50
# load(paste0("/Users/burcu/Dropbox/UZH_PROJECTS/COVID19Forecasting/code/OUT_TR/RDATA/T_modelBT_rc_100_mrelax_",m_relax_in,".RData"))
M_model_TR     = stan_model("/Users/burcu/dropbox/covid-modeling-stan/BT/models/model_TR.stan")
T_modelTR      = sampling(M_model_TR,data = data_list,warmup=150,iter=500,chains=4,init=0.5)
# m_relax_in=50
# load(paste0("/Users/burcu/Dropbox/UZH_PROJECTS/COVID19Forecasting/code/OUT_TR/RDATA/T_modelBT_rc_100_mrelax_",m_relax_in,".RData"))
M_model_TR     = stan_model("/Users/burcu/dropbox/covid-modeling-stan/BT/models/model_TR.stan")
T_modelTR      = sampling(M_model_TR,data = data_list,warmup=150,iter=500,chains=4,init=0.5)
pp = c("fitted_k_daily_cases","fitted_k_daily_deaths")
model_output_fitted = summary(T_modelTR,pp)[[1]] %>%
tbl_df() %>%
mutate(t=rep(1:data_list$D,2),
date=date_data+t-1,
eta="-100%",
type=rep(pp,each=data_list$D)) %>%
mutate(populasyon=factor(type,levels=pp,
labels=c("Gunluk Vaka Sayisi","Gunluk Vefat Sayisi")))
agg_data_all = tibble(all_dates=observed_dates,all_data=observed_data,populasyon=model_output_fitted$populasyon);
# GET RID OF ICU
agg_data         = tibble(allDates_agg,daily_cases_data,daily_deaths_data);
observed_data    = c(daily_cases_data,daily_deaths_data);
observed_dates   = c(allDates_agg,allDates_agg);
agg_data_all = tibble(all_dates=observed_dates,all_data=observed_data,populasyon=model_output_fitted$populasyon);
ggplot() +
geom_ribbon(data=model_output_fitted,aes(x=date,ymin=`2.5%`,ymax=`97.5%`,fill=populasyon),alpha=.5) +
geom_line(data=model_output_fitted,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populasyon ,scales="free",nrow=1) +
geom_vline(xintercept=date_control_1,linetype=2) +
geom_vline(xintercept=date_control_2,linetype=2) +
geom_vline(xintercept=date_relax,linetype=2) +
geom_vline(xintercept=date_end,linetype=2) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
scale_x_date(date_breaks="2 weeks",date_labels="%b %d") +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=agg_data_all,aes(x=all_dates,y=all_data,fill=populasyon),shape=21,size=2,colour = "black", fill = "white") +
labs(x="Gun",y="Birey Sayisi")+
scale_y_continuous(trans = 'log10')
ggsave(paste0("/Users/burcu/dropbox/covid-modeling-stan-master/BT/TR_FIGS/figure_fit_rc_",data_list$r_c,"_mrelax_",m_relax_in,".png"),width = 10, height = 3)
ggsave(paste0("/Users/burcu/dropbox/covid-modeling-stan/BT/OUT_TR/FIGS/figure_fit_rc_",data_list$r_c,"_mrelax_",m_relax_in,".png"),width = 10, height = 3)
parameterSummary = summary(T_modelTR, c("R0","tau","gamma_s","gamma_H","gamma_ICU","eps_H","eps_H2ICU","eps_x_ICU","r_d_s","r_d_c","r_lock_1",
"r_lock_2","shift_lock_1","shift_lock_2","m_lock_1","m_lock_2","phi"), probs = c(0.025, 0.25, 0.50, 0.75, 0.975))
pp3 = c("predicted_daily_cases","predicted_daily_deaths")
model_output_all = summary(T_modelTR,pp3)[[1]] %>%
tbl_df() %>%
mutate(t=rep(1:data_list$S,2),
date=date_data+t-1,
eta="-100%",
type=rep(pp3,each=data_list$S)) %>%
mutate(populasyon=factor(type,levels=pp3,
labels=c("Gunluk Vaka Sayisi","Gunluk Vefat Sayisi")))
ggplot() +
geom_ribbon(data=model_output_all,aes(x=date,ymin=`2.5%`,ymax=`97.5%`,fill=populasyon),alpha=.5) +
geom_line(data=model_output_all,aes(x=date,y=`50%`),colour="black") +
facet_wrap(~ populasyon ,scales="free",nrow=1) +
geom_vline(xintercept=date_control_1,linetype=2) +
geom_vline(xintercept=date_control_2,linetype=2) +
geom_vline(xintercept=date_relax,linetype=2) +
geom_vline(xintercept=date_end,linetype=2) +
scale_colour_manual(values=c("grey20","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
scale_x_date(date_breaks="2 weeks",date_labels="%b %d") +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point(data=agg_data_all,aes(x=all_dates,y=all_data,fill=populasyon),shape=21,size=2,colour = "black", fill = "white") +
labs(x="Gun",y="Birey Sayisi")+
scale_y_continuous(trans = 'log10')
ggsave(paste0("/Users/burcu/dropbox/covid-modeling-stan/BT/OUT_TR/FIGS/figure_all_rc_",data_list$r_c,"_mrelax_",m_relax_in,".png"),width = 10, height = 3)
pp = "comp_S"
model_output_s = summary(T_modelTR,pp)[[1]] %>%
tbl_df() %>%
mutate(t=rep(1:data_list$S,1),
date=date_data+t-1,
eta="-100%",
type=rep(pp,each=data_list$S)) %>%
mutate(populasyon=factor(type,levels=pp,
labels=c("Susceptibles")))
model_output_s[,4]=model_output_s[,4]*(parameterSummary$summary[1,4]/as.numeric(model_output_s[1,1]));
model_output_s[,6]=model_output_s[,6]*(parameterSummary$summary[1,6]/as.numeric(model_output_s[1,1]));
model_output_s[,8]=model_output_s[,8]*(parameterSummary$summary[1,8]/as.numeric(model_output_s[1,1]));
r_lock_1=parameterSummary$summary[11,1];
r_lock_2=parameterSummary$summary[12,1];
shift_lock_1=parameterSummary$summary[13,1];
shift_lock_2=parameterSummary$summary[14,1];
m_lock_1=parameterSummary$summary[15,1];
m_lock_2=parameterSummary$summary[16,1];
t_lock_1=as.numeric(date_control_1-date_data+1)
t_lock_2=as.numeric(date_control_2-date_data+1)
t_relax =as.numeric(date_relax-date_data+1)
m_relax = m_relax_in/100;
Re_25=rep(0,S)
Re_50=rep(0,S)
Re_75=rep(0,S)
for (k in seq(1,S)){
print(k)
switch_lock_1 = r_lock_1+(1-r_lock_1)/(1+exp(m_lock_1*(k-t_lock_1-shift_lock_1)));
switch_lock_2 = r_lock_2+(1-r_lock_2)/(1+exp(m_lock_2*(k-t_lock_2-shift_lock_2)));
r_lock        = r_lock_1*r_lock_2;
switch_relax  = r_lock+1./(1/(1-r_lock)+exp(-m_relax*(k-t_relax-(6*(1/m_relax)*(1-m_relax)+1/m_relax))))
if(m_relax>0){
if(switch_lock_1*switch_lock_2>switch_relax){
coeffR = switch_lock_1*switch_lock_2;
}
else{
coeffR = switch_relax;
}
}else{
coeffR = switch_lock_1*switch_lock_2;
}
Re_25[k] = switch_lock_1*switch_lock_2*as.numeric(model_output_s[k,4])
Re_50[k] = switch_lock_1*switch_lock_2*as.numeric(model_output_s[k,6])
Re_75[k] = switch_lock_1*switch_lock_2*as.numeric(model_output_s[k,8])
}
Re_25=rep(0,data_list$S)
Re_50=rep(0,data_list$S)
Re_75=rep(0,data_list$S)
for (k in seq(1,data_list$S)){
print(k)
switch_lock_1 = r_lock_1+(1-r_lock_1)/(1+exp(m_lock_1*(k-t_lock_1-shift_lock_1)));
switch_lock_2 = r_lock_2+(1-r_lock_2)/(1+exp(m_lock_2*(k-t_lock_2-shift_lock_2)));
r_lock        = r_lock_1*r_lock_2;
switch_relax  = r_lock+1./(1/(1-r_lock)+exp(-m_relax*(k-t_relax-(6*(1/m_relax)*(1-m_relax)+1/m_relax))))
if(m_relax>0){
if(switch_lock_1*switch_lock_2>switch_relax){
coeffR = switch_lock_1*switch_lock_2;
}
else{
coeffR = switch_relax;
}
}else{
coeffR = switch_lock_1*switch_lock_2;
}
Re_25[k] = switch_lock_1*switch_lock_2*as.numeric(model_output_s[k,4])
Re_50[k] = switch_lock_1*switch_lock_2*as.numeric(model_output_s[k,6])
Re_75[k] = switch_lock_1*switch_lock_2*as.numeric(model_output_s[k,8])
}
sdates=model_output_s$date;
Re=tibble(sdates,Re_25,Re_50,Re_75)
ggplot() +
geom_ribbon(data=Re,aes(x=sdates,ymin=`Re_25`,ymax=`Re_75`),fill="pink",alpha=.8) +
geom_line(data=Re,aes(x=sdates,y=`Re_50`),colour="black")+
geom_vline(xintercept=date_control_1,linetype=2) +
geom_vline(xintercept=date_control_2,linetype=2) +
geom_vline(xintercept=date_relax,linetype=2) +
geom_vline(xintercept=date_end,linetype=2) +
scale_colour_manual(values=c("pink","black"),guide=FALSE) +
scale_alpha_manual(values=c(1,0),guide=FALSE) +
scale_x_date(date_breaks="2 weeks",date_labels="%b %d") +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
labs(x="Gun",y="Re")
install.packages("SpaDES")
install.packages("SpaDES")
library("SpaDES.core")
demoSim <- suppressMessages(simInit(
times = list(start = 0, end = 100),
modules = "SpaDES_sampleModules",
params = list(
.globals = list(burnStats = "nPixelsBurned"),
randomLandscapes = list(
nx = 1e2, ny = 1e2, .saveObjects = "landscape",
.plotInitialTime = NA, .plotInterval = NA, inRAM = TRUE
),
caribouMovement = list(
N = 1e2, .saveObjects = c("caribou"),
.plotInitialTime = 1, .plotInterval = 1, moveInterval = 1
),
fireSpread = list(
nFires = 1e1, spreadprob = 0.235, persistprob = 0, its = 1e6,
returnInterval = 10, startTime = 0,
.plotInitialTime = 0, .plotInterval = 10
)
),
path = list(modulePath = system.file("sampleModules", package = "SpaDES.core"))
))
spades(demoSim)
install.packages(RandomFields)
install.packages("RandomFields")
spades(demoSim)
spades(demoSim)
